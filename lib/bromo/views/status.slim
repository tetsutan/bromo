
- TIME_FORMAT = "%y/%m/%d %H:%M"
- now = Time.now

#container


  - if @search_result && !@search_result.empty?
    #page-header
      h2 Search Result
      == slim :_schedule_table_data, locals: {schedules: @search_result}

  - schedules = Bromo::Model::Schedule.recording.from_time_desc
  - if !schedules.empty?
    #page-header
      h2 Recording
      == slim :_schedule_table_data, locals: {schedules: schedules}

  - schedules = Bromo::Model::Schedule.queue.from_time_asc
  - if !schedules.empty?
    #page-header
      h2 Queue
      == slim :_schedule_table_data, locals: {schedules: schedules}

  - schedules = Bromo::Model::Schedule.failed.where("from_time > ?", Time.now.to_i - (14 * 24 * 60 * 60)).from_time_desc
  - if !schedules.empty?
    #page-header
      h2 Failed
      == slim :_schedule_table_data, locals: {schedules: schedules}


  - schedules = Bromo::Model::Schedule.recorded.from_time_desc.limit(5)
  - if !schedules.empty?
    #page-header
      h2 Recorded head 5
      == slim :_schedule_table_data, locals: {schedules: schedules}

  - schedules = Bromo::Model::Schedule.now_on_air.from_time_desc
  - if !schedules.empty?
    #page-header
      h2 Now on air
      == slim :_schedule_table_data, locals: {schedules: schedules}


  - Bromo::QueueManager.medias.each do |media|
    h2 Last Recorded Media: #{media.name}
    - schedules = Bromo::Model::Schedule.where(media_name: media.name).recorded.order("created_at DESC").limit(1)
    - if !schedules.empty?
      - if schedules.first.created_at < now - 7*24*60*60
        div class="label label-warning" Delay updating?
      == slim :_schedule_table_data, locals: {schedules: schedules}


