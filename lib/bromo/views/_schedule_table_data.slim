
table.table
  tr
    th Title
    th Description
    th From
    th To
    th Record
    th Media
    th Group
  - schedules.each do |schedule|
    tr
      td.title = schedule.title
      td.description = schedule.description
      td.from_time = Time.at(schedule.from_time).strftime(TIME_FORMAT)
      td.to_time = schedule.to_time == 0 ? "" : Time.at(schedule.to_time).strftime(TIME_FORMAT)

      - case schedule.recorded
        - when Bromo::Model::Schedule::RECORDED_RECORDED
          td.recorded class="success" Recorded
        - when Bromo::Model::Schedule::RECORDED_QUEUE
          td.recorded class="warning" Queue
        - when Bromo::Model::Schedule::RECORDED_RECORDING
          td.recorded class="warning" Recording
        - when Bromo::Model::Schedule::RECORDED_FAILED
          td.recorded class="danger"
            p Failed
            - if !schedule.media.realtime?
              button.redownload id="#{schedule.id}" Try Re-Download
        - else
          td.recorded

      td.media
        - if schedule.channel_name && !schedule.channel_name.empty?
          = "#{schedule.media_name}/#{schedule.channel_name}"
        - else
          = schedule.media_name

      td.group
        - if schedule.group
          - group = schedule.group
          - if group.image_path
            a href="http://#{hostname}/list/#{group.name}.xml"
              img src="http://#{hostname}/image/#{group.image_path}" alt="#{group.name}" class="group_icon"
          - elsif group.name
            a href="http://#{hostname}/list/#{group.name}.xml" #{group.name}
